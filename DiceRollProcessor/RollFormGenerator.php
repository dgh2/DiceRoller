<?phpclass RollFormGenerator{    protected function __construct()    {    }    /**     * Generates and returns the HTML to create a form that submits to the current page     * The generated form contains a text input field, a submit input, and hidden fields for each query parameter     *     * @param string $inputFieldDefault The default value for the text input field     * @param string $submitButtonText The text to display on the submit input field     * @param null|string[] $extraHiddenFieldNames The names of hidden input fields to submit with values of true     * @return string     */    public static function generate($inputFieldDefault, $submitButtonText, ...$extraHiddenFieldNames)    {        $formHtml = "<form id=\"rollForm\" action=\"" . htmlspecialchars($_SERVER['PHP_SELF']) . "\">";        $formHtml .= self::createInput("text", "roll", $inputFieldDefault);        $formHtml .= self::createInput("submit", null, $submitButtonText);        foreach ($extraHiddenFieldNames as $hiddenFieldName) {            $formHtml .= self::createInput("hidden", $hiddenFieldName, "true");        }        $formHtml .= self::createHiddenFields('roll', ...$extraHiddenFieldNames);        $formHtml .= "</form>";        return $formHtml;    }    /**     * Generates and returns the HTML to create hidden input fields for each query parameter in the request     * This is used to keep any query parameters (other than "roll") in the url after submitting the form     *     * @param string[] $excludedNames The names of fields which should be excluded     * @return string The generated HTML for the hidden input fields     */    protected static function createHiddenFields(...$excludedNames)    {        $hiddenFields = "";        foreach ($_GET as $name => $value) {            $name = htmlspecialchars(strip_tags($name));            if (array_search($name, $excludedNames) === false) {                $value = htmlspecialchars(strip_tags($value));                $hiddenFields .= self::createInput("hidden", $name, $value);            }        }        return $hiddenFields;    }    /**     * Generates and returns HTML to display the specified form input     *     * @param string $inputType The type of HTML input to generate (text, submit, hidden, etc.)     * @param null $inputName The input name used to reference elements in a JavaScript, or to reference form data after a form is submitted     *      Note: Only form elements with a name attribute will have their values passed when submitting a form     * @param null $inputValue     * @return string The generated HTML for a input field     */    protected static function createInput($inputType, $inputName = null, $inputValue = null)    {        $generatedInput = "<input type=\"" . htmlspecialchars(strip_tags($inputType)) . "\"";        if (isset($inputValue) && !empty(htmlspecialchars(strip_tags($inputValue)))) {            $generatedInput .= " value=\"" . htmlspecialchars(strip_tags($inputValue)) . "\"";        }        if (isset($inputName) && !empty(htmlspecialchars(strip_tags($inputName)))) {            $generatedInput .= " name=\"" . htmlspecialchars(strip_tags($inputName)) . "\"";        }        $generatedInput .= "/>";        return $generatedInput;    }}