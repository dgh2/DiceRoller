<?phpnamespace ShuntingYard\OperatorRegistry;require_once('Interfaces/HasUnaryOperation.php');//stores a unary operator, if its prefix or postfix, and a callable to run on the operandclass UnaryOperatorEntry implements Interfaces\HasUnaryOperation{    public const PREFIX = "PREFIX"; // --5 => 5    public const POSTFIX = "POSTFIX"; // 5! => 120 (5*4*3*2)    private $name;    private $fix;    private $operation;    public function __construct($name, $fix, $operation)    {        $this->name = $name;        $this->fix = $fix;        $this->operation = $operation;    }    public function getName(): string    {        return $this->name;    }    public function getFix(): string    {        return $this->fix;    }    public function isPrefix(): bool    {        return $this->fix === self::PREFIX;    }    public function isPostfix(): bool    {        return $this->fix === self::POSTFIX;    }    public function getPrecedence(): int    {        return 5;    }    public function getOperation(): callable    {        return $this->operation;    }    public function call($operand)    {        $operation = $this->operation;        return is_callable($this->operation) ? $operation($operand) : null;    }    public function getArity(): int    {        return 1;    }}